        Notas de Cursos

        Curso - introduccion a Java SE

java se divide en dos tipos: Java SE y Java EE (standar y enterprise respectivamente).

JDK(java development kit): esta compuesto por tres herramientas:
    1. Java Runtime Enviroment JRE: maquina virtual, lo que lo hace ser multiplataforma ( que en cualquier SO pueda correr)
    2. Compilador de Java: toma el lenguaje de java lo traduce a algo que la maquina virtual si pueda leer (byte code)
    3. API de desarrollo: una base de elementos, de clases, codigo, etc. que contiene el JDK para que no partamos de cero.

las versiones de Java con la abreviacion LTS es que el soporte se le da en largo tiempo (Long Time Support), el tiempo establecido es de 3 años.

Oracle cobra por el uso de Java: solo deja Gratis si es para ambientes de desarrollo y para ambientes de testing
Cuando se utiliza en ambiente de produccion, se cobra 2.5 dolares al mes por usuario de escritorio y 25 dolares por procesador aplicaicones de servidor

Por esta razon existe las versiones OpenJDK, gratis y fue creada por la comunidad
el problema de tener mantenimiento de la comunidad es que no es muy confiable, pero las personas comprometidas son de mucha experiencia, incluso dos compañias (red Hat y sun mycrosistem)

IDE: enterno de desarrollo integrado
    se puede programar en un blog de notas y compilar en terminal, pero para eso sirve IDE, nos da:
        * Edicion de texto: colores didacticos, ayudas, etc
        * Compilador: no hay que ejecutar aparte en la terminal
        * Depurador:
        * Constructor de interfaz grafica: para programas que requieren usar la interfaz

Metodo main:
    es el punto de entrada de nuestra aplicacion en java
    se declara de la siguiente forma --> public static void main (parametros) { //acciones  }
    Sin este metodo el programa no se ejecutara

Etapas del proceso de ejecucion (ejemplo con el proyecto HolaMundoJava):
    1. Creamos el codigo fuente (lo que escribimos en el .java)
    2. Al hacer Run: se ejecuta el compilador de java, leyo nuestro codigo y lo tradujo a un lenguaje de maquina o Byte Code(archivos .class)
    3. Por ultimo se ejecuta la JVM (la maquina virtual)
    -Por lo tanto Java es un Compilado e Interpretado: El compilado valida si todo esta bien escrito y luego la VM interpreta lo que se compilo

ByteCode - lo que entiende nuestra maquina virtual:
    Al hacer una ejecucion se nos creara una carpeta llamada "Out", esa carpeta contendra un archivo con el mismo nombre de nuestro Main
    Si abrimos ese archivo, veremos datos en bytes, eso es lo que el compilador hizo y lo que enviara a la maquina virtual para que interprete
    Esto es interesante, porque le agrega una capa de seguridad al no exponer el codigo fuente tan en plano.

Variables - Son un espacio de memoria al que le podemos asignar contenido:

Convencion de nombres en Java:
    Es sensible a mayusculas/minusculas
    Todas las variables deben de comenzar con letra o alguno de estos dos simbolos $ _
    Si se utiliza snake_case, luego del guion bajo se puede usar cualquiera entre letras, numeros y $ _
    Las constantes deben de ser escritas en mayusculas cerradas y si son dos palabras poner guion bajo
    Camel Case: Upper cuando estemos creando Clases, y variables, metodos siempre iniciar con lower
        Upper Camel Case: Inicia la primera letra con Mayuscula
        lower camel Case: inicia la primera letra con minuscula

Tipos de datos:
    El integer solo puede almacenar hasta 10 digitos
    en los casos que se requiera utilizar mas de 10 caracteres, se puede usar el tipo de variable long, importante colocar una "L" mayuscula al final de los digitos
    en caso de decimal podremos utilizar double si se requiere de algo bien preciso
    o float si no tiene que ser tan preciso, solo que hay que colocar al final la "F" mayuscula
    comillas dobles son para String, comillas simples para char y con los char solamente podemos colocar un elemento
    A partir de JAVA 10, se puede usar solamente Var, y se entendera que tipo de variable es


                notas random:
lo que sea que se escriba en SE se puede implementar con EE

en cuanto a SERVERS(proyectos en servidor, integraacion de dependencias,integracion de compilacion) para construir proyectos es Maven, pero algunos usan Gradle
en cuanto a  frameworks: Spring , su version mas usada es la 2.0
en cuanto ORM: la mas utilizada es hybernate

Java tiene una herramienta interactiva en dónde puedes ir probando segmentos de código en vez de realizar todo el proceso de creación de un programa en Java. Escribir, compilar y correr.
    podemos utilizarla solo con Java 9 en adelante, por lo que si tenemos el 8 solo es de cambiarla con un comando
    Teniendo Java 9+ podremos utilizar para entrar en este modo con el comando: jshell
    En este momento podemos probar lineas de codigo java, importante colocar el punto y coma.